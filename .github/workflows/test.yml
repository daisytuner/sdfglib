name: Test

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
        matrix:
            os: [ubuntu-22.04]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 

      - name: Install dependencies
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get install -y build-essential cmake ninja-build
          sudo apt-get install -y libboost-graph-dev
          sudo apt-get install -y libgmp-dev
          sudo apt-get install -y nlohmann-json3-dev
          sudo apt-get install -y libisl-dev
          sudo apt-get install -y libpapi-dev papi-tools

          sudo wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo add-apt-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-14 main"
          sudo add-apt-repository "deb-src http://apt.llvm.org/jammy/ llvm-toolchain-jammy-14 main"
          sudo apt-get update
          sudo apt-get install -y clang-format-14

          pip install gcovr pytest

      - name: Linting
        run: clang-format-14 --dry-run --Werror src/**/*.cpp tests/**/*.cpp include/**/*.h

      - name: Build
        run: |
          mkdir build
          cd build
          cmake -G Ninja -DSDFGLIB_ENABLE_COVERAGE=ON -DBUILD_TESTS:BOOL=OFF -DBUILD_BENCHMARKS:BOOL=OFF -DBUILD_BENCHMARKS_GOOGLE:BOOL=OFF -DWITH_SYMENGINE_RCP=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
          ninja -j$(nproc)

      - name: Unit tests
        run: |
          cd build
          ./tests/sdfglib_test
          gcovr --filter ../include/ --filter ../src/ --coveralls coveralls.json -r ../

      - name: Coveralls
        uses: coverallsapp/github-action@v2
