# .clang-tidy
Checks:          '-*,clang-diagnostic-*,clang-analyzer-*,bugprone-*,cert-*,cppcoreguidelines-*,misc-*,modernize-*,performance-*,readability-*,hicpp-*'
WarningsAsErrors: 'clang-diagnostic-*,cert-*,bugprone-*,cppcoreguidelines-*,hicpp-*'

# Check, to understand the values of the options: https://clang.llvm.org/extra/clang-tidy/checks/readability/identifier-naming.html

CheckOptions:
  - { key: readability-identifier-naming.VariableCase, value: lower_case }
  - { key: readability-identifier-naming.FunctionCase, value: lower_case }
  - { key: readability-identifier-naming.MethodCase, value: lower_case }
  - { key: readability-identifier-naming.ParameterCase, value: lower_case }
  - { key: readability-identifier-naming.MemberCase, value: lower_case }
  - { key: readability-identifier-naming.ConstantCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.TypeCase, value: CamelCase }
  - { key: readability-identifier-naming.ClassCase, value: CamelCase }
  - { key: readability-identifier-naming.StructCase, value: CamelCase }
  - { key: readability-identifier-naming.EnumCase, value: CamelCase }
  - { key: readability-identifier-naming.EnumConstantCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.MacroCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.TypedefCase, value: CamelCase }
  - { key: readability-identifier-naming.UnionCase, value: CamelCase }
  - { key: modernize-use-nullptr.NotNullMacros, value: 'NULL' }
  - { key: modernize-use-nullptr.NullMacros, value: 'nullptr_t' }
